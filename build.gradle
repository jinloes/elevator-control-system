group 'com.jinloes'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'groovy'

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenCentral()
    jcenter()
}

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--format', 'html:build/cucumber-html-report', '--glue', 'com.jinloes', 'src/test/resources']
        }
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter',
            'io.vertx:vertx-core:3.0.0',
            'io.vertx:vertx-web:3.0.0',
            'io.vertx:vertx-service-proxy:3.0.0',
            'io.vertx:vertx-codegen:3.0.0',
            'org.jacpfx.vertx.spring:vertx-spring-ext:2.0.0',
            'org.apache.commons:commons-lang3:3.4',
            'com.google.guava:guava:18.0')
    testCompile(
            'info.cukes:cucumber-java:1.2.3',
            'info.cukes:cucumber-junit:1.2.3',
            'junit:junit:4.11',
            'org.mockito:mockito-all:1.10.19',
            'junit:junit:4.12',
            'org.codehaus.groovy:groovy-all:2.4.4',
            'org.spockframework:spock-core:1.0-groovy-2.4',
            'org.hamcrest:hamcrest-all:1.3',
            'io.vertx:vertx-unit:3.0.0'
    )
    testRuntime(
            'com.athaydes:spock-reports:1.2.7'
    )
}
def generateSrcPath="$buildDir/generated-src"
def generatedSrcDir = file("$buildDir/generated-src")


sourceSets {
    main {
        java.srcDirs += generatedSrcDir
        output.dir(builtBy: 'generateServiceProxy', generateSrcPath)
    }
}

task generateServiceProxy(type: JavaCompile, description: 'Generates EBServiceProxies') {
    source = sourceSets.main.java
    classpath = configurations.
            compile
    destinationDir = generatedSrcDir
    options.compilerArgs = [
            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor",
            "-AoutputDirectory=$generateSrcPath"
    ]
}

compileJava.dependsOn generateServiceProxy

